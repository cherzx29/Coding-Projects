#Author: Cherith Boya
#Date: 2022/06/2
#
#Description:
#   The programme will first introduce the user to this game and tell them to
#   give a username that can be used throughout the program. The programme will
#   then take the user to the menu where they can choose what to do from the
#   options of 1, 2, 3, or 4. If the user chooses 1, then it will take them to a
#   "description" block were they can learn the rules of this game and then it
#   will take the user back to the menu. If the user chooses 2, it will then take
#   them to a "play_game" block where it will allow the user to play the game.
#   The numbers will be generated for 
#



#   A method to return a random digit from specified range given
from random import randint

#   Pauses the execution of the other block of code to continue given the
#   number of seconds
from time import sleep

#   GLOBAL VARIABLES
#   Allows you to modify the variable outside of the current scope/block
totalPoints = 0
lives = 1
restart = 1
rounds = 0
random = ""

#   Welcomes user to my game called CARD SHACK
print(str("\n\t\t\t      CHERITH'S CARD SHACK"))
print("\t\t•❅──────✧❅✦❅✧──────❅•❅──────✧❅✦❅✧──────❅•")

userName = input("\n\t\t\t    Please enter a username: ")

#   Welcome them to the program and send them to the menu
print("\n\t\t\tHello " + str(userName) + " and welcome to my program")

#   I defined this block called menu where this is the starting point of the program
def menu():
    
    #   Makes the execution of this code of block to wait for 1 second
    sleep(1)
    
    print("\n\t\t︽︽︽︽︽︽︽︽︽︽ THE MENU ︽︽︽︽︽︽︽︽︽︽\n")
    print("\n\t\t\t-----------------------------")
    print("\t\t\t〣  Type [1] Description     〣")
    print("\t\t\t-----------------------------")
    print("\t\t\t〣  Type [2] Play            〣")
    print("\t\t\t-----------------------------")
    print("\t\t\t〣  Type [3] Quit            〣")
    print("\t\t\t-----------------------------")
    print("\t\t\t〣  Type [4] Challenges      〣")
    print("\t\t\t-----------------------------")
    
    #   Enters a choice between 1, 2, 3, or 4 to choose where to go
    choice = str(input("\n\t\tPlease enter a choice to get started " +
                       "(1 or 2 or 3 or 4) ➤  "))
    
    #   If they chose 1 then it will call out the description.
    if choice == "1":
        #   It will call the "description" block and perform its code that it has
        description()
        
    #   If they chose 2 then it will call out play game block, where it will allow, 
    #   the user to play the game.
    elif choice == "2":  
        #   It will call the "play_game" block and perform its code that it has
        play_game()
        
    #   If they chose 3 then it will call out the quit option where it will allow,
    #   the user quit the program
    elif choice == "3":
        #   It will call the "quit" block and perform its code that it has
        quit()
        
    #   If they enter anything beside 1, 2, 3, or 4, then it will say invalid.
    #   Allows them to go back to the menu and type 1, 2, or 3.

    elif choice == "4":
        challenges()
    else:
        print("\n\t\t\tEnter valid input!")
        #   It will call the "menu" block and perform its code that it has
        menu()    


#   If "description" is being called then, 
#   it shall do the following task that it has for it to do and takes the user
#   to this location
def description():
    
    #   Shows the description of the game
    print("\n☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵")
    print("\nAs you know by now this game is called; CARD SHACK ")
    sleep(3) #   Sets the delay for 3 second then excutes, the follwoing code
    print("\nYou are randomly given two cards and those two cards" +
          " \nare going to be randomly generated by a number from 1 - 10")
    sleep(3) #   Sets the delay for 3 second then excutes, the follwoing code
    print("\nThe number of your two cards will determine how much points" +
          " \nyou get. For example: card 1(7) + card 2(5) = 12 points! ")
    sleep(3) #   Sets the delay for 3 second then excutes, the follwoing code
    print("\nIf your points add up to either 5, 10, 15, or 20, you earn " +
          " \nno points")
    sleep(3) #   Sets the delay for 5 second then excutes, the follwoing code
    print("\nThere are also lives. You always start of with 1 live." +
          " \nGet your points to add up each round and you gain a life" +
          "and always one step of being ahead" +
          " \nGet your points to not add up each round, loose a life and" +
          "always one step from getting 0 lives. Get 0 lives and you loose")
    sleep(5) #   Sets the delay for 3 second then excutes, the follwoing code
    print("\nThere are also challenges you can check out to do!")
    sleep(3) #   Sets the delay for 3 second then excutes, the follwoing code
    print("\nMost importantly get more points and HAVE FUN!!!")
    print("\n☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵☵")
    
    sleep(3) #   Sets the delay for 3 second then excutes, the follwoing code
    #   It will call the "menu" block and perform its code that it has
    menu()

#   If "play_game" is being called then,
#   it shall do the following task that it has for it to do and takes the user
#   to this location
def play_game():
    
    #   Sets the delay for 1 second then excutes, the follwoing code
    sleep(1)
    
    print("\n\t\t\t\t⚧ LET'S BEGIN ⚧")
    
    #  Sets the delay for 1 second then excutes, the follwoing code 
    sleep(1)
    
    print("\n\t\t**********THE NUMBERS WERE GENERATED!**********")
    
    #   Has a start value of 1 and a stop value of 3
    for x in range(1, 4):
        #   Sets the delay for 1 second then excutes, the following code 
        sleep(0.5)
        #   Prints 1 to 3 with the following "Results in: " after the number
        #   from 1 to 3
        print("\n\t\t\t\tResults in ≾ " + str(x))

    print("\n\t\t\t┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄⑆┄")

    #   Card 1 gets a random integer from the range 1 - 10
    card1 = randint(1, 10)
    
    #   Card 2 gets a random integer form the range 1 - 10
    card2 = randint(1, 10)

    #   Prints card 1 with "Card 1: "
    print("\n\t\t\tCard 1 is: ", int(card1), "⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶")
    print("\n\t\t---------------------------------------------------")
    
    #   Prints card 2 with "Card 2: "
    print("\n\t\t\tCard 2 is: ", int(card2), "⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶⇶")
    print("\n\t\t---------------------------------------------------")

    #   Allows you to modify the variable outside of the current scope/block
    global totalPoints, lives, rounds 

    #   Adds up the points of card 1 and card 2
    points = card1 + card2
    
    #   Adds up the total points with the points(card1 + card2)
    #   (totalPoints always starts of with 0 then adds up with other points per round)
    totalPoints = totalPoints + points

    #   If the total points equal to 5, 10, 15, or 20, then the points won't add up
    #   with the total points 
    if points == 5 or points == 10 or points == 15 or points == 20:
        totalPoints = totalPoints - points
        print("\n\t ↜------You have earned no points since, it's equal too 5, 10, " +
              "15, or 20")
        
        #   For each round they play, it will add up by one(rounds starts with 0)
        rounds = rounds + 1
        print("\n\t\tThis is your " + str(rounds) + " round")
        
        #   The lives will get subtracted by one live
        #   (User will always start of with 1 live then either increase
        #   or decrease)
        lives = lives - 1
        
        #   Shows how much lives they have
        print("\n\t\t ↜----- Right now " + str(userName) + " has " + str(lives) +
              " lives so far")
        
        #   Shows how much total points they have
        print("\n\t\t ↜----- So far " + str(userName) + " has " + str(totalPoints) +
              " points in total")

    #   If the total points don't equal to 5, 10, 15, or 20 then, it does the
    #   following.            
    else:
        
        #   Shows the points you've eanred in the round they are in
        print("\n\t ↜----- " +
              "The total points that you have earned for this round " +
              "are: ", int(points))
        
        #   Lives increase by 1 if they don't get points 5, 10, 15, or 20
        lives = lives + 1
        #   Rounds will add by one 
        rounds = rounds + 1
        
        #   Shows what round they are in
        print("\n\t\t ↜----- This is your " + str(rounds) + " round")
        
        #   Shows how much lives you currently have
        print("\n\t\t ↜----- Right now " + str(userName) + ", you have " +
              str(lives), " lives so far")
        #   Shows the total points you have earned
        print("\n\t\t ↜----- So far " + str(userName) + ", you have " +
              str(totalPoints), "points in total")
        
        print("\n\t\t===============================================")

    #   If lives are less then 0, it will print this statement 
    if lives <= 0:
        print("\n\t-------------Unfortunately, you have no more lives left" +
              "-------------")
        
        #   It will automatically call the "print_result" block and do it's
        #   following code
        print_result()
        
        #   It will automatically call the "feedback" block and do it's
        #   following code
        feedback()

    #   If lives are not less then 0, then it will ask the user if they want
    #   to continue
    else:
        #   Asks the user the question
        ch = input("\n\t\tDo you want to continue?(yes/no): ")
        
        if ch != "no":
            #   It will call the "play_game" block and perform it's code
            play_game()
            
        else:
            #   It will call the "print_result" block and perform it's code
            print_result()

#   If "print_result" is being called then,
#   it shall do the following task that it has for it to do and takes the user
#   to this location
def print_result():
    
    #   Allows you to modify the variable outside of the current scope/block
    global totalPoints, lives, rounds

    #   When the user doesn't want to continue, the it will print
    #   the total points, the total lives they had, and the total rounds
    #   they played for the whole game.
    print("\n\t\t⟸----------------------------------------------------⟹")
    print("\t\t  Total Points  |  Total Lives  |  Total Rounds ")
    print("\t\t⟸----------------------------------------------------⟹")
    print("\t\t     "+ str(totalPoints)+ "        |"+ "       "+ str(lives)+
          "         |"+ "       "+ str(rounds)  )
    print("\t\t⟸----------------------------------------------------⟹")

    #   This question will ask the suer if they want to go back to the menu, have
    #   to answer in yes/no
    goBackMenu = str(input("\n\t\t\tDo you want to go back to the menu(yes/no):  "))

    #   If the user says anything other then no then it will reset the variables
    #   back to the original values and send them to menu
    #   (This will allows the user to choose their choice again whether they want to
    #   see the description, play again, quit, or look at the challenges.
    if goBackMenu != "no":
        #   Total points will reset back to 0 points
        totalPoints = 0

        #   Lives will reset back to 1
        lives = 1

        #   Rounds will reset back to 0
        rounds = 0

        #   It will call the "menu" block and perform its code that it has
        menu()
    else:
        #   It will call the "feedback" block and perform its code that it has
        feedback()

#   If "feedback" is being called then,
#   it shall do the following task that it has for it to do and takes the user
#   to this location     
def feedback():
    #   Tells the user if they want to give me any feedback or not
    question = str(input("\nBefore you leave, is there any feedback you would like" +
                       " to give me?(yes/no): "))

    #   If they say anything besides no
    if question !="no":
        #   Asks the user what would the programmer like to improve on 
        feedback = str(input("\n\t\tWhat would you like me to improve/add on this " +
                             " program: "))
        #   If the user says anything then it will print the statement
        if feedback != "":
            print("\n\t\t\tThank you " + str(userName) + " for your feedback")
            #   It will call the "quit" block and perform its code that it has
            quit()

        #   If the user says anything then it will print the statement
        else:
            print("\n\t\t\tThank you " + str(userName) + " for your feedback")
            #   It will call the "quit" block and perform its code that it has
            quit()
    #   If they say no       
    else:
        #   It will call the "quit" block and perform its code that it has
        quit()

#   If "quit" is being called then,
#   it shall do the following task that it has for it to do and takes the user
#   to this location

def challenges():
    #   Challenge 1
    print("\n1. One challenge you can do is with your friends!")
    print("   The game you can play with your friend is where")
    print("   the first person to reach 100 points or above is")
    print("   THE WINNER!")

    #   Challenge 2
    print("\n2. A second challenge you can do with your friends is")
    print("   whosever points have been 5, 10, 15, or 20")
    print("   (which means you would get no points) 3 times under")
    print("   10 rounds looses and the other person wins!")

    #   Sets the delay for 0.5 seconds then excutes, the following code
    sleep(5)

    
    #   It will call the "menu" block and perform its code that it has
    menu()
    
def quit():

    #   Prints a bye statement
    print("\n\tWell, I hope you enjoyed my program and have a wonderful day")

    #   This for loop doesn't have a start and stop value but just prints the
    #   words provided from left to right
    for x in ("You", "Are", "Now", "Leaving", "The", "Game"):

        #   Sets the delay for 0.5 seconds then excutes, the following code 
        sleep(0.5)
        
        #   Print the words in a vertical direction
        print("\n\t\t\t\t", x)

    #   Prints "BYE!"
    print("\n\t===============\     =             =    ===================   |-|")
    print("\t|               |     \           /     |                     | |")
    print("\t|               |      \         /      |                     | |")
    print("\t|               |       \       /       |                     | |")
    print("\t|              /         \     /        |                     | |")
    print("\t|==============           \   /         |==================   | |")
    print("\t|              \           \ /          |                     \_/")
    print("\t|               |           |           |                        ")
    print("\t|               |           |           |                      --")
    print("\t|               |           |           |                     |  |")
    print("\t===============/            |           ===================    --  ")

#   Stops at this point since everything starts from menu and should also end
menu()    
        
